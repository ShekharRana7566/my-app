{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = cls => {\n    document.body.classList.add('bg-' + cls);\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#03062e';\n      showAlert(\"Dark Mode enabled\", 'success');\n      // document.title='TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode enabled\", 'success');\n      // document.title='TextUtils - Home';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextApp\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Form, {\n              heading: \"Enter Text to Analyse\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Form","About","React","useState","Alert","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","cls","document","body","classList","add","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","_c","$RefreshReg$"],"sources":["E:/REACT/my-app/src/App.js"],"sourcesContent":["\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Form from './components/Form';\r\nimport About from './components/About';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n\r\nconst showAlert=(message,type)=>{\r\n  setAlert({\r\n    msg:message,\r\n    type:type\r\n  })\r\n  setTimeout(() => {\r\n    setAlert(null);\r\n  }, 2000);\r\n\r\n}\r\n\r\n\r\n  const toggleMode=(cls)=>{\r\n    document.body.classList.add('bg-'+cls)\r\n    if(mode==='light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#03062e';\r\n      showAlert(\"Dark Mode enabled\",'success');\r\n      // document.title='TextUtils - Dark Mode';\r\n  }\r\n    else{\r\n    setMode('light');\r\n    document.body.style.backgroundColor='white';\r\n    showAlert(\"Light Mode enabled\",'success');\r\n    // document.title='TextUtils - Home';\r\n  }\r\n  }\r\n  return (\r\n    <>\r\n     <Router>\r\n  <Navbar title=\"TextApp\" mode={mode} toggleMode= { toggleMode } />\r\n  <Alert alert={alert}/>\r\n  \r\n  <div className=\"container my-3\">\r\n  <Routes>\r\n          <Route exact path=\"/about\" element={<About mode={mode}/>}/>\r\n          <Route exact path=\"/\" element={<Form heading= \"Enter Text to Analyse\" mode={mode} showAlert={showAlert}/>}/>\r\n           \r\n        </Routes>\r\n        {/* <Form heading= \"Enter Text to Analyse\" mode={mode} showAlert={showAlert}/> */}\r\n  </div>\r\n  </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACA,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMgB,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EAEV,CAAC;EAGC,MAAMM,UAAU,GAAEC,GAAG,IAAG;IACtBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,KAAK,GAACJ,GAAG,CAAC;IACtC,IAAGV,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfU,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CZ,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;MACxC;IACJ,CAAC,MACK;MACJH,OAAO,CAAC,OAAO,CAAC;MAChBU,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CZ,SAAS,CAAC,oBAAoB,EAAC,SAAS,CAAC;MACzC;IACF;EACA,CAAC;;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACCtB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,gBACVtB,OAAA,CAACX,MAAM;QAACkC,KAAK,EAAC,SAAS;QAAClB,IAAI,EAAEA,IAAK;QAACS,UAAU,EAAIA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjE3B,OAAA,CAACN,KAAK;QAACa,KAAK,EAAEA;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEtB3B,OAAA;QAAK4B,SAAS,EAAC,gBAAgB;QAAAN,QAAA,eAC/BtB,OAAA,CAACH,MAAM;UAAAyB,QAAA,gBACCtB,OAAA,CAACF,KAAK;YAAC+B,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAE/B,OAAA,CAACT,KAAK;cAACc,IAAI,EAAEA;YAAK;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC3D3B,OAAA,CAACF,KAAK;YAAC+B,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,OAAO,eAAE/B,OAAA,CAACV,IAAI;cAAC0C,OAAO,EAAE,uBAAuB;cAAC3B,IAAI,EAAEA,IAAK;cAACI,SAAS,EAAEA;YAAU;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACP,CAAC;AAEL;AAACvB,EAAA,CAjDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}