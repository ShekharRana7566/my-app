{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#03062e';\n      showAlert(\"Dark Mode enabled\", 'success');\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode enabled\", 'success');\n      document.title = 'TextUtils - Home';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextApp\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        heading: \"Enter Text to Analyse\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Form","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["E:/REACT/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n\n}\n\n\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#03062e';\n      showAlert(\"Dark Mode enabled\",'success');\n      document.title='TextUtils - Dark Mode';\n  }\n    else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light Mode enabled\",'success');\n    document.title='TextUtils - Home';\n  }\n  }\n  return (\n    <>\n     {/* <Router> */}\n  <Navbar title=\"TextApp\" mode={mode} toggleMode= { toggleMode } />\n  <Alert alert={alert}/>\n  \n  <div className=\"container my-3\">\n  {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<Form heading= \"Enter Text to Analyse\" mode={mode} showAlert={showAlert}/>}/>\n           \n        </Routes> */}\n        <Form heading= \"Enter Text to Analyse\" mode={mode} showAlert={showAlert}/>\n  </div>\n  {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AACA,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EAEV,CAAC;EAGC,MAAMM,UAAU,GAACA,CAAA,KAAI;IACnB,IAAGT,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CT,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;MACxCM,QAAQ,CAACI,KAAK,GAAC,uBAAuB;IAC1C,CAAC,MACK;MACJb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CT,SAAS,CAAC,oBAAoB,EAAC,SAAS,CAAC;MACzCM,QAAQ,CAACI,KAAK,GAAC,kBAAkB;IACnC;EACA,CAAC;EACD,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEFpB,OAAA,CAACN,MAAM;MAACyB,KAAK,EAAC,SAAS;MAACd,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAIA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjExB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEtBxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAMzBpB,OAAA,CAACL,IAAI;QAAC+B,OAAO,EAAE,uBAAuB;QAACrB,IAAI,EAAEA,IAAK;QAACI,SAAS,EAAEA;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA,eAEJ,CAAC;AAEL;AAACpB,EAAA,CAhDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}